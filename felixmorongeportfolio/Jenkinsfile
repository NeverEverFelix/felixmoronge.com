pipeline {
  agent {
    kubernetes {
      defaultContainer 'kaniko'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: kaniko-deploy
spec:
  serviceAccountName: jenkins-irsa-sa
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:latest
      imagePullPolicy: Always
      volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
  volumes:
    - name: workspace-volume
      emptyDir: {}
"""
    }
  }

  environment {
    ECR_REGISTRY = "137068221475.dkr.ecr.us-east-1.amazonaws.com"
    IMAGE_NAME = "felixmoronge-portfolio"
    IMAGE_TAG = "latest"
  }

  stages {
    stage('Prep') {
      steps {
        container('kaniko') {
          sh 'aws sts get-caller-identity || true'
        }
      }
    }

    stage('Build and Push') {
      steps {
        container('kaniko') {
          sh '''
            /kaniko/executor \
              --context=/workspace \
              --dockerfile=/workspace/Dockerfile \
              --destination=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
              --verbosity=debug
          '''
        }
      }
    }
  }
}

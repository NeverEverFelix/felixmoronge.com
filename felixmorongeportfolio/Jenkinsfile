pipeline {
  agent {
    kubernetes {
      defaultContainer 'kaniko'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: kaniko-deploy
spec:
  serviceAccountName: jenkins-irsa-sa
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:latest
      imagePullPolicy: Always
      command:
        - /kaniko/executor
      args:
        - --context=/workspace
        - --dockerfile=/workspace/Dockerfile
        - --destination=137068221475.dkr.ecr.us-east-1.amazonaws.com/felixmoronge-portfolio:latest
        - --verbosity=debug
        - --cache=true
        - --cache-repo=137068221475.dkr.ecr.us-east-1.amazonaws.com/felixmoronge-portfolio
      env:
        - name: AWS_REGION
          value: us-east-1
        - name: AWS_DEFAULT_REGION
          value: us-east-1
        - name: AWS_ROLE_ARN
          value: arn:aws:iam::137068221475:role/jenkins-irsa-role
        - name: AWS_WEB_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
  volumes:
    - name: workspace-volume
      emptyDir: {}
"""
    }
  }

  environment {
    ECR_REGISTRY = "137068221475.dkr.ecr.us-east-1.amazonaws.com"
    IMAGE_NAME = "felixmoronge-portfolio"
    IMAGE_TAG = "latest"
  }

  stages {
    stage('Build and Push with Kaniko') {
      steps {
        container('kaniko') {
          sh 'echo ðŸš€ Building and pushing Docker image to ECR...'
        }
      }
    }
  }
}
